{"version":3,"sources":["Components/Text.js","Components/Status.js","Components/InputText.js","Components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Text","props","isTitle","className","onClick","click","content","Status","status","style","color","fontWeight","textDecoration","InputText","placeholder","value","marginRight","height","outline","borderRadius","border","fontSize","textTransform","type","onChange","e","getValue","target","index","Task","isLastItem","title","updateData","useState","isEditting","setIsEditting","inputValue","setInputValue","App","id","dataTask","setDataTask","console","log","newData","task","splice","map","item","length","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88f6665b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Text(props) {\n  if (props.isTitle) {\n    return <h1 className='title-content' onClick={props.click}>{props.content}</h1>\n  } else {\n    return <p>{props.content}</p>\n  }\n}\n\nexport default Text;\n","function Status(props) {\n  switch (props.status) {\n    case 'done':\n      return <p style={{ color: 'green', fontWeight: 'bold' }}>{props.status}</p>\n    case 'cancel':\n      return <p style={{ color: 'red', textDecoration: 'line-through'  }}>{props.status}</p>\n    case 'pending':\n      return <p style={{ color: 'violet', textDecoration: 'underline' }}>{props.status}</p>\n    default:\n      return <p>{props.status}</p>\n      ;\n  }\n}\n\nexport default Status;\n","function InputText(props) {\n  const styleInput = {\n    marginRight: '20px',\n    height: '30px',\n    outline: 'none',\n    borderRadius: '5px',\n    border: 'none',\n    fontSize: '20px',\n    color: '#333',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n\n  }\n return(\n   \n   <input placeholder={props.value} style={styleInput} type='text' onChange={(e) => {\n     props.getValue(e.target.value, props.index)\n   }} />\n )\n}\n\nexport default InputText;\n","import React, { useState } from 'react';\n\nimport Text from './Text';\nimport Status from './Status';\nimport InputText from './InputText';\nimport './Task.css'\n\nfunction Task(props) {\n  const {\n    isLastItem,\n    content,\n    title,\n    status,\n    updateData,\n    index,\n  } = props;\n\n  const [isEditting, setIsEditting] = useState(false);\n  const [inputValue, setInputValue] = useState({value: '', index: 0});\n\n  const getValue = (value, index) => {\n    setInputValue({value: value, index: index});\n  }\n\n  let className = 'task';\n\n  if (isLastItem) {\n    className += ' last-task';\n  }\n\n  const saveData =() => {\n    setIsEditting(false)\n    updateData(inputValue.value, inputValue.index)\n  }\n  \n  const showInputText = () => {\n    if (isEditting) {\n      return(\n        <div className='task-input'>\n          <div>\n            <InputText value={title} getValue={getValue} index={index} />\n            <Text content={content} />\n          </div>\n          <p className='save' onClick={() => saveData()}>Save</p>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <Text \n          isTitle \n          content={title} \n          click={() => {\n            setIsEditting(true)\n          }}/>\n          <Text content={content} />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className={className}>\n     {showInputText()}\n      <Status status={status} />\n    </div>\n  );\n}\n\nexport default Task;\n","import React , {useState} from 'react';\n\nimport './App.css';\nimport Task from './Components/Task';\nfunction App() {\n    const DATA = [\n        {\n            id: '01',\n            title: 'Học bài',\n            content: 'Học react',\n            status: 'done',\n        },\n        {\n            id: '02',\n            title: 'Đọc truyện',\n            content: 'One Piece characters 1000',\n            status: 'cancel',\n        },\n        {\n            id: '03',\n            title: 'Chơi game',\n            content: 'Dota 2',\n            status: 'pending',\n        },\n    ]\n\n    const [dataTask, setDataTask] = useState(DATA);\n\n    const updateData = (value, index) => {\n        console.log(value, index);\n        const newData = [...dataTask]\n        const task = {\n            ...dataTask[index],\n            title : value,\n        }\n        newData.splice(index, 1, task)\n        setDataTask(newData);\n    }\n\n    const renderTask = () => {\n        return dataTask.map((item, index) => {\n            return <Task\n                {...item}\n                isLastItem={index === dataTask.length - 1}\n                updateData={updateData}\n                index={index}\n                key={item.id}\n            />\n        })\n    }\n\n    return (\n        <div className='container'>\n            <h1 className='header'>To do list</h1>\n            {renderTask()}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}